package com.design23.group3behavior.b5Visitor;

/***
  * @Author: fu.xc
  * @Description:
 * ● Visitor——抽象访问者
 * 抽象类或者接口，声明访问者可以访问哪些元素，具体到程序中就是visit方法的参数定义哪些对象是可以被访问的。
 *
 * ● ConcreteVisitor——具体访问者
 * 它影响访问者访问到一个类后该怎么干，要做什么事情。
 *
 * ● Element——抽象元素
 * 接口或者抽象类，声明接受哪一类访问者访问，程序上是通过accept方法中的参数来定义的。
 *
 * ● ConcreteElement——具体元素
 * 实现accept方法，通常是visitor.visit(this)，基本上都形成了一种模式了。
 *
 * ● ObjectStruture——结构对象
 * 元素产生者，一般容纳在多个不同类、不同接口的容器，如List、Set、Map等，在项目中，一般很少抽象出这个角色。
 *
  * @Date: 2020/12/22
  **/

//使用场景
//● 一个对象结构包含很多类对象，它们有不同的接口，而你想对这些对象实施一些依赖于其具体类的操作，也就说是用迭代器模式已经不能胜任的情景。
//● 需要对一个对象结构中的对象进行很多不同并且不相关的操作，而你想避免让这些操作“污染”这些对象的类。