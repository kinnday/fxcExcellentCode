package com.design23.grop2structure.s7FlyWeight;

//● Flyweight——抽象享元角色
//它简单地说就是一个产品的抽象类，同时定义出对象的外部状态和内部状态的接口或实现。
//
//● ConcreteFlyweight——具体享元角色
//具体的一个产品类，实现抽象角色定义的业务。该角色中需要注意的是内部状态处理应该与环境无关，不应该出现一个操作改变了内部状态，同时修改了外部状态，这是绝对不允许的。
//
//● unsharedConcreteFlyweight——不可共享的享元角色
//不存在外部状态或者安全要求（如线程安全）不能够使用共享技术的对象，该对象一般不会出现在享元工厂中。
//
//● FlyweightFactory——享元工厂
//职责非常简单，就是构造一个池容器，同时提供从池中获得对象的方法。


//使用场景
//● 系统中存在大量的相似对象。
//● 细粒度的对象都具备较接近的外部状态，而且内部状态与环境无关，也就是说对象没有特定身份。
//● 需要缓冲池的场景。


//Flyweight是拳击比赛中的特用名词，意思是“特轻量级”，指的是51公斤级比赛，
// 用到设计模式中是指我们的类要轻量级，粒度要小，这才是它要表达的意思。
// 粒度小了，带来的问题就是对象太多，那就用共享技术来解决